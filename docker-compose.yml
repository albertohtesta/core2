version: '3.9'

services:
  core-backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      - pg
      - rabbitmq
      - redis
    ports:
      - "3000:3000"
    volumes:
      - .:/core-backend
      - gem_cache:/core-backend/vendor/bundle
      - ssh-data:/ssh:ro
    env_file: .env.dev
    tty: true
    stdin_open: true
    environment:
      DB_PASSWORD: password
      DB_USER: postgres
      RAILS_ENV: development
      DB_HOST: pg
      BUNDLE_PATH: /core-backend/vendor/bundle
      PORT: 3000
      SSH_AUTH_SOCK: /ssh/auth/sock

  core-frontend:
    build:
      context: ./core-frontend
      dockerfile: Dockerfile.dev
    depends_on:
      - core-backend
    ports:
      - "4000:4000"
    volumes:
      - ./core-frontend:/core-frontend
      - node_cache:/core-frontend/node_modules
    environment:
      NODE_ENV: development
      PORT: 4000

  pg:
    image: postgres:14.3-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7.0-alpine
    env_file: .env
    ports:
      - 6379:6379
    volumes:
      - ./config/redis.conf:/redis.conf
    command: [ "redis-server", "/redis.conf", "--requirepass ${REDIS_PASSWORD}" ]

  rabbitmq:
    image: rabbitmq:3.10-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq

volumes:
  gem_cache:
  node_cache:
  db_data:
  rabbitmq_data:
  rabbitmq_log:
  ssh-data:
    external: true
    name: ssh_data
