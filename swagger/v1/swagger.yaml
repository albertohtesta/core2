---
openapi: 3.0.1
info:
  title: Core API V1
  version: v1
paths:
  "/api/v1/admins/registrations":
    post:
      summary: Register a new user
      tags:
      - Admins
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: Invitation sent successfully
        '400':
          description: 'Validation failed: Roles is not included in the list'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                groups_names:
                  type: array
              required:
              - email
              - groups_names
  "/api/v1/admins/roles":
    patch:
      summary: Updates a user role
      tags:
      - Admins
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: user updated
        '400':
          description: bad request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              role:
                email:
                  type: string
                groups_names:
                  type: array
              required:
              - email
              - groups_names
  "/api/v1/admins/users":
    get:
      summary: List all users
      tags:
      - Admins
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: user updated
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user"
  "/api/v1/admins/users/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: integer
    put:
      summary: Updates a user
      tags:
      - Admins
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: user updated
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user"
  "/api/v1/forgot_passwords":
    post:
      summary: Password Recovery for any user
      tags:
      - Admins Clients Collaborators
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: Password recovery email sent
      requestBody:
        content:
          application/json:
            schema:
              type: object
              credentials:
                username:
                  type: string
              required:
              - username
  "/api/v1/passwords":
    put:
      summary: Update a user password
      tags:
      - Admins Clients Collaborators
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: Password set successfully. A confirmation mail was sent.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              credentials:
                username:
                  type: string
                password:
                  type: string
                new_password:
                  type: string
              required:
              - username
              - password
              - new_password
    post:
      summary: Update a user password
      tags:
      - Admins Clients Collaborators
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: Password set successfully. A confirmation mail was sent.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              credentials:
                username:
                  type: string
                password:
                  type: string
                new_password:
                  type: string
              required:
              - username
              - password
              - new_password
  "/api/v1/recover_passwords":
    post:
      summary: Recover a user password
      tags:
      - Admins Clients Collaborators
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: Password recovered
      requestBody:
        content:
          application/json:
            schema:
              type: object
              credentials:
                username:
                  type: string
                password:
                  type: string
                confirmation_code:
                  type: string
              required:
              - username
              - password
              - new_password
  "/api/v1/sessions":
    post:
      summary: Creates a session for the given user
      tags:
      - Admins Clients Collaborators
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              session:
                username:
                  type: string
                password:
                  type: string
              required:
              - username
              - password
  "/build-info":
    get:
      summary: gets the build info
      tags:
      - Info
      responses:
        '200':
          description: info received
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/info"
servers:
- url: https://qa-core-api.nordhen.com
- url: http://localhost:3000
components:
  securitySchemes:
    Bearer:
      description: JWT key necessary to use API calls
      type: apiKey
      name: Authorization
      in: header
  schemas:
    info:
      type: object
      properties:
        build_id:
          type: string
        build_date:
          type: string
        build_branch:
          type: string
      required:
      - build_id
      - build_date
      - build_branch
    user:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            is_enabled:
              type: boolean
          required:
          - email
          - is_enabled
